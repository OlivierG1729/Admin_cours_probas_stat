column_imputation_methods1 <- column_imputation_methods[var]
column_imputation_methods1[c("TCLNAIS_2", "type_menage_entree", "AGEQ","AGEQ_CJ_entree" ,
"CSP_8","CSP_CJ_8_entree","CSP_CJ_DCD_8_entree","RFONC","RTO_FOYER_I","VAL_FOYER_I","VAM_FOYER_I", "revenu_nonind_modele",
"revenu_ind_foyer_modele_c","proprio_entree","placement_entree","STATUT_ETAB", #"pres_aspa_senior",
"pres_ash_senior_cor","AIDELOG","region")] <- c("pmm","" ,"pmm","pmm","pmm","pmm", "pmm", "", "", "", "", "","pmm","logreg","logreg","","","","") # CSP_8, MINVIE et RFONC ont des valeurs manquantes dans Patrimoine ;
# TCLNAIS, AGEQ et PATFISOM (obviously) ont des valeurs manquantes dans CARE
set.seed(123)
imputation_methods <- sapply(colnames(data_mice_care),
function(x){return(column_imputation_methods1[[x]])})
# --------------------------------------------------------------------------------
#                      Point de sauvegarde 1
#
# sauvegarde de tout l'environnement jusque là
save(list = ls(),
file = paste0(dossier_sauvegarde_rdata,
"/06_data_part1.Rdata")
)
base_care_dupliquee$IDSENIOR
length(base_care_dupliquee$IDSENIOR)
length(unique(base_care_dupliquee$IDSENIOR))
length(unique(base_patri_dupliquee$IDSENIOR))
# En dupliquant les lignes selon les poids
mice_mod_care_dupliquee <- mice::mice(data_mice_care_dupliquee,
m = 1,
maxit = 10,
print = T,
vis = "monotone",
method=imputation_methods)
# mice_output = le dataframe data_mice (= base_care restreint aux variables de var)
# après imputation des valeurs manquantes
mice_output_care_dupliquee <- mice::complete(mice_mod_care_dupliquee)
# on récupère dans base_care les variables après imputation
base_care_dupliquee_apres_imputation_vax <- base_care_dupliquee %>% mutate(AGEQ = mice_output_care_dupliquee$AGEQ,
TCLNAIS_2 = mice_output_care_dupliquee$TCLNAIS_2,
CSP_8 = mice_output_care_dupliquee$CSP_8,
CSP_CJ_8_entree = mice_output_care_dupliquee$CSP_CJ_8_entree,
CSP_CJ_DCD_8_entree = mice_output_care_dupliquee$CSP_CJ_DCD_8_entree,
AGEQ_CJ_entree = mice_output_care_dupliquee$AGEQ_CJ_entree,
proprio_entree = mice_output_care_dupliquee$proprio_entree,
revenu_ind_foyer_modele_c = mice_output_care_dupliquee$revenu_ind_foyer_modele_c,
placement_entree = mice_output_care_dupliquee$placement_entree) %>%
select(idsenior_dupliquee, IDSENIOR, POIDS_SENIOR, poids_cales,
PATFISOM, PATFISOM_sans_cc, PATIMM, PATRI_BRUT,
PATRI_NET, BASECARE, SEXE, STATUT_ETAB,
TCLNAIS_2, type_menage_entree, AGEQ, AGEQ_CJ_entree,
CSP_8, CSP_CJ_8_entree, CSP_CJ_DCD_8_entree, RFONC,
RTO_FOYER_I, VAL_FOYER_I, VAM_FOYER_I, revenu_nonind_modele,
revenu_ind_foyer_modele_c, proprio_entree, placement_entree,
STATUT_ETAB, pres_ash_senior_cor, AIDELOG, region)
base_care_dupliquee_avant_imputation_vax <- base_care_dupliquee %>%
select(idsenior_dupliquee, IDSENIOR, POIDS_SENIOR, poids_cales,
PATFISOM, PATFISOM_sans_cc, PATIMM, PATRI_BRUT,
PATRI_NET, BASECARE, SEXE, STATUT_ETAB,
TCLNAIS_2, type_menage_entree, AGEQ, AGEQ_CJ_entree,
CSP_8, CSP_CJ_8_entree, CSP_CJ_DCD_8_entree, RFONC,
RTO_FOYER_I, VAL_FOYER_I, VAM_FOYER_I, revenu_nonind_modele,
revenu_ind_foyer_modele_c, proprio_entree, placement_entree,
STATUT_ETAB, pres_ash_senior_cor, AIDELOG, region)
base_care_dupliquee_apres_imputation_vax <- base_care_dupliquee_apres_imputation_vax %>%
mutate(base = "CARE",
imputation_vax = "apres_imputation_vax")
base_care_dupliquee_avant_imputation_vax <- base_care_dupliquee_avant_imputation_vax %>%
mutate(base = "CARE",
imputation_vax = "avant_imputation_vax")
base_care_dupliquee_avant_apres_imputation_vax <- rbind(base_care_dupliquee_avant_imputation_vax,
base_care_dupliquee_apres_imputation_vax)
# mice_output = le dataframe data_mice (= base_care restreint aux variables de var)
# après imputation des valeurs manquantes
mice_output_care_dupliquee <- mice::complete(mice_mod_care_dupliquee)
# on récupère dans base_care les variables après imputation
base_care_dupliquee_apres_imputation_vax <- base_care_dupliquee %>% mutate(AGEQ = mice_output_care_dupliquee$AGEQ,
TCLNAIS_2 = mice_output_care_dupliquee$TCLNAIS_2,
CSP_8 = mice_output_care_dupliquee$CSP_8,
CSP_CJ_8_entree = mice_output_care_dupliquee$CSP_CJ_8_entree,
CSP_CJ_DCD_8_entree = mice_output_care_dupliquee$CSP_CJ_DCD_8_entree,
AGEQ_CJ_entree = mice_output_care_dupliquee$AGEQ_CJ_entree,
proprio_entree = mice_output_care_dupliquee$proprio_entree,
revenu_ind_foyer_modele_c = mice_output_care_dupliquee$revenu_ind_foyer_modele_c,
placement_entree = mice_output_care_dupliquee$placement_entree) %>%
select(idsenior_dupliquee, IDSENIOR, POIDS_SENIOR, poids_cales,
PATFISOM, PATFISOM_sans_cc, PATIMM, PATRI_BRUT,
PATRI_NET, BASECARE, SEXE, STATUT_ETAB,
TCLNAIS_2, type_menage_entree, AGEQ, AGEQ_CJ_entree,
CSP_8, CSP_CJ_8_entree, CSP_CJ_DCD_8_entree, RFONC,
RTO_FOYER_I, VAL_FOYER_I, VAM_FOYER_I, revenu_nonind_modele,
revenu_ind_foyer_modele_c, proprio_entree, placement_entree,
STATUT_ETAB, pres_ash_senior_cor, AIDELOG, region)
base_care_dupliquee_avant_imputation_vax <- base_care_dupliquee %>%
select(idsenior_dupliquee, IDSENIOR, POIDS_SENIOR, poids_cales,
PATFISOM, PATFISOM_sans_cc, PATIMM, PATRI_BRUT,
PATRI_NET, BASECARE, SEXE, STATUT_ETAB,
TCLNAIS_2, type_menage_entree, AGEQ, AGEQ_CJ_entree,
CSP_8, CSP_CJ_8_entree, CSP_CJ_DCD_8_entree, RFONC,
RTO_FOYER_I, VAL_FOYER_I, VAM_FOYER_I, revenu_nonind_modele,
revenu_ind_foyer_modele_c, proprio_entree, placement_entree,
STATUT_ETAB, pres_ash_senior_cor, AIDELOG, region)
base_care_dupliquee_apres_imputation_vax <- base_care_dupliquee_apres_imputation_vax %>%
mutate(base = "CARE",
imputation_vax = "apres_imputation_vax")
base_care_dupliquee_avant_imputation_vax <- base_care_dupliquee_avant_imputation_vax %>%
mutate(base = "CARE",
imputation_vax = "avant_imputation_vax")
base_care_dupliquee_avant_apres_imputation_vax <- rbind(base_care_dupliquee_avant_imputation_vax,
base_care_dupliquee_apres_imputation_vax)
# --------------------------------------------------------------------------------
#                      Point de sauvegarde 2
save(list=ls(),
file = paste0(dossier_sauvegarde_rdata,
"/06_data_part2.Rdata")
)
# imputation des variables manquantes de patrimoine à partir de patrimoine----------------------
base_patri <- base_imp[BASECARE==0,]
base_patri[, revenu_ind_foyer_modele_c:=revenu_ind_foyer_modele]
var <- c("TCLNAIS_2", "type_menage_entree", "AGEQ","AGEQ_CJ_entree" ,
"CSP_8","CSP_CJ_8_entree","CSP_CJ_DCD_8_entree","RFONC","RTO_FOYER_I","VAL_FOYER_I","VAM_FOYER_I", "revenu_nonind_modele",
"revenu_ind_foyer_modele_c","proprio_entree","placement_entree","AIDELOG","region")
# on définit data_mice comme les données de base_imp réduites aux individus de l'enquête Patrimoine
data_mice_patri <- base_imp[BASECARE==0,]
data_mice_patri[AIDELOG=="",
AIDELOG:=NA_character_]
# on ne garde que les variables de var
data_mice_patri <- data_mice_patri %>% dplyr::select(var)
# column_imputation_methods1 <- column_imputation_methods[var]
column_imputation_methods1[c("TCLNAIS_2", "type_menage_entree", "AGEQ","AGEQ_CJ_entree" ,
"CSP_8","CSP_CJ_8_entree","CSP_CJ_DCD_8_entree","RFONC","RTO_FOYER_I","VAL_FOYER_I","VAM_FOYER_I", "revenu_nonind_modele",
"revenu_ind_foyer_modele_c","proprio_entree","placement_entree","AIDELOG","region")] <- c("","" ,"","","cart","cart", "cart", "cart","", "","", "", "","","","cart","") # CSP_8, MINVIE et RFONC ont des valeurs manquantes dans Patrimoine ;
imputation_methods <- sapply(colnames(data_mice_patri), function(x) {return(column_imputation_methods1[[x]])})
# restriction à la base Patrimoine dupliquée
data_mice_patri_dupliquee <- base_imp_dupliquee %>%
filter(BASECARE==0)
length(unique(data_mice_patri_dupliquee$IDSENIOR))
data_mice_patri_dupliquee <- data_mice_patri_dupliquee %>%
mutate(AIDELOG=ifelse(AIDELOG=="", NA_character_, AIDELOG))
# on ne garde que les variables de var
data_mice_patri_dupliquee <- data_mice_patri_dupliquee %>% dplyr::select(var)
set.seed(123)
mice_mod_patri_dupliquee <- mice::mice(data_mice_patri_dupliquee,
m = 1,
maxit = 10,
print = T,
vis = "monotone",
method=imputation_methods)
mice_output_patri_dupliquee <- mice::complete(mice_mod_patri_dupliquee)
base_patri_dupliquee_apres_imputation_vax <- base_patri_dupliquee %>% mutate(CSP_8 = mice_output_patri_dupliquee$CSP_8,
CSP_CJ_8_entree = mice_output_patri_dupliquee$CSP_CJ_8_entree,
CSP_CJ_DCD_8_entree = mice_output_patri_dupliquee$CSP_CJ_DCD_8_entree,
RFONC = mice_output_patri_dupliquee$RFONC,
AIDELOG=mice_output_patri_dupliquee$AIDELOG) %>%
select(idsenior_dupliquee, IDSENIOR, POIDS_SENIOR, poids_cales,
PATFISOM, PATFISOM_sans_cc, PATIMM, PATRI_BRUT,
PATRI_NET, BASECARE, SEXE, STATUT_ETAB,
TCLNAIS_2, type_menage_entree, AGEQ, AGEQ_CJ_entree,
CSP_8, CSP_CJ_8_entree, CSP_CJ_DCD_8_entree, RFONC,
RTO_FOYER_I, VAL_FOYER_I, VAM_FOYER_I, revenu_nonind_modele,
revenu_ind_foyer_modele_c, proprio_entree, placement_entree,
STATUT_ETAB, pres_ash_senior_cor, AIDELOG, region)
base_patri_dupliquee_avant_imputation_vax <- base_patri_dupliquee %>%
select(idsenior_dupliquee, IDSENIOR, POIDS_SENIOR, poids_cales,
PATFISOM, PATFISOM_sans_cc, PATIMM, PATRI_BRUT,
PATRI_NET, BASECARE, SEXE, STATUT_ETAB,
TCLNAIS_2, type_menage_entree, AGEQ, AGEQ_CJ_entree,
CSP_8, CSP_CJ_8_entree, CSP_CJ_DCD_8_entree, RFONC,
RTO_FOYER_I, VAL_FOYER_I, VAM_FOYER_I, revenu_nonind_modele,
revenu_ind_foyer_modele_c, proprio_entree, placement_entree,
STATUT_ETAB, pres_ash_senior_cor, AIDELOG, region)
base_patri_dupliquee_apres_imputation_vax <- base_patri_dupliquee_apres_imputation_vax %>%
mutate(base = "patri",
imputation_vax = "apres_imputation_vax")
base_patri_dupliquee_avant_imputation_vax <- base_patri_dupliquee_avant_imputation_vax %>%
mutate(base = "patri",
imputation_vax = "avant_imputation_vax")
base_patri_dupliquee_avant_apres_imputation_vax <- rbind(base_patri_dupliquee_avant_imputation_vax,
base_patri_dupliquee_apres_imputation_vax)
# base compilée CARE-I + Patrimoine, AVANT et APRES imputation
base_care_patri_dupliquee_avant_apres_imputation_vax <- rbind(
base_care_dupliquee_avant_apres_imputation_vax,
base_patri_dupliquee_avant_apres_imputation_vax)
# --------------------------------------------------------------------------------
#                      Point de sauvegarde 3
save(list=ls(),
file = paste0(dossier_sauvegarde_rdata,
"/06_data_part3.Rdata")
)
# Compilation des bases dupliquées APRES imputation
base_compile_dupliquee <- data.table(base_care_patri_dupliquee_avant_apres_imputation_vax %>%
filter(imputation_vax=="apres_imputation_vax"))
# être propriétaire à l'entrée
base_compile_dupliquee <- base_compile_dupliquee[, proprio_entree:=proprio_entree][BASECARE==0 & PATIMM>0,
proprio_entree:="oui"][BASECARE==0 & PATIMM==0,
proprio_entree:="non"]
# détenir du patrimoine immobilier
base_compile_dupliquee <- base_compile_dupliquee[, PATIMM:=PATIMM][proprio_entree %in% c("non"),
PATIMM:=0]
# détenir du patrimoine financier (sans compte-èchèque)
base_compile_dupliquee <- base_compile_dupliquee[, PATFISOM_sans_cc:=PATFISOM_sans_cc][placement_entree %in% c("non"),
PATFISOM_sans_cc:=0]
# base compile_dupliquee restreinte aux propriétaires à l'entrée en établissement
base_compile_proprio_entree_dupliquee <- base_compile_dupliquee[proprio_entree=="oui"]
# base compile_dupliquee restreinte aux non-propriétaires à l'entrée en établissement
base_compile_nonproprio_entree_dupliquee <- base_compile_dupliquee[proprio_entree=="non"]
# base compile restreinte aux non-propriétaires à l'entrée en établissement mais ayant tout
# de même du patrimoine (financier donc)
base_compile_nonproprio_entree_avec_patrimoine_dupliquee <- base_compile_nonproprio_entree_dupliquee[(is.na(PATFISOM_sans_cc) & BASECARE==1)|BASECARE==0 ,]
# --------------------------------------------------------------------------------
#     Point de sauvegarde 4 : tout jusqu'à l'imputation de patrimoine (exclue)
save(list=ls(),
file = paste0(dossier_sauvegarde_rdata,
"/06_data_part4.Rdata")
)
# on impute sur la base compilée, à partir des données de la sous-base Patrimoine
result_proprio_1_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 130)
result_proprio_2_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 140)
result_proprio_3_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 150)
result_proprio_4_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 160)
result_proprio_5_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 170)
result_proprio_6_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 180)
result_proprio_7_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 190)
result_proprio_8_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 200)
result_proprio_9_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 210)
result_proprio_10_dupliquee <- imput_patri(base_compile_proprio_entree_dupliquee, 220)
# --------------------------------------------------------------------------------
#                       Point de sauvegarde 5
save(list=ls(),
file = paste0(dossier_sauvegarde_rdata,
"/06_data_part5.Rdata")
)
setnames(result_proprio_1_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_1', 'PATFISOM_sans_cc_I_1'))
setnames(result_proprio_2_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_2', 'PATFISOM_sans_cc_I_2'))
setnames(result_proprio_3_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_3', 'PATFISOM_sans_cc_I_3'))
setnames(result_proprio_4_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_4', 'PATFISOM_sans_cc_I_4'))
setnames(result_proprio_5_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_5', 'PATFISOM_sans_cc_I_5'))
setnames(result_proprio_6_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_6', 'PATFISOM_sans_cc_I_6'))
setnames(result_proprio_7_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_7', 'PATFISOM_sans_cc_I_7'))
setnames(result_proprio_8_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_8', 'PATFISOM_sans_cc_I_8'))
setnames(result_proprio_9_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_9', 'PATFISOM_sans_cc_I_9'))
setnames(result_proprio_10_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_10', 'PATFISOM_sans_cc_I_10'))
result_proprio_1_dupliquee <- result_proprio_1_dupliquee %>%
select(-IDSENIOR)
result_proprio_2_dupliquee <- result_proprio_2_dupliquee %>%
select(-IDSENIOR)
result_proprio_3_dupliquee <- result_proprio_3_dupliquee %>%
select(-IDSENIOR)
result_proprio_4_dupliquee <- result_proprio_4_dupliquee %>%
select(-IDSENIOR)
result_proprio_5_dupliquee <- result_proprio_5_dupliquee %>%
select(-IDSENIOR)
result_proprio_6_dupliquee <- result_proprio_6_dupliquee %>%
select(-IDSENIOR)
result_proprio_7_dupliquee <- result_proprio_7_dupliquee %>%
select(-IDSENIOR)
result_proprio_8_dupliquee <- result_proprio_8_dupliquee %>%
select(-IDSENIOR)
result_proprio_9_dupliquee <- result_proprio_9_dupliquee %>%
select(-IDSENIOR)
result_proprio_10_dupliquee <- result_proprio_10_dupliquee %>%
select(-IDSENIOR)
# on importe les résultats dans base_care_proprio (c'est le patrimoine imputé dans CARE-I qui nous intéresse)
base_care_proprio_dupliquee <- base_care_dupliquee_apres_imputation_vax %>%
filter(proprio_entree=="oui")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_dupliquee, result_proprio_1_dupliquee, all.x=TRUE, by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_2_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_3_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_4_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_5_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_6_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_7_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_8_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_9_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_proprio_impute_dupliquee <- merge(base_care_proprio_impute_dupliquee, result_proprio_10_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
# on ajoute des statistiques obtenues à partir des 10 imputations aléatoires
# NOTE 14/03 : après avoir exécuté ce code,
# base_care_proprio_impute_dupliquee a 58 colonnes
base_care_proprio_impute_dupliquee <- base_care_proprio_impute_dupliquee %>%
mutate(moy10_PATIMM_I:=(PATIMM_I_1+PATIMM_I_2+PATIMM_I_3+PATIMM_I_4+PATIMM_I_5+PATIMM_I_6+PATIMM_I_7+PATIMM_I_8+PATIMM_I_9+PATIMM_I_10)/10,
moy10_PATFISOM_sans_cc_I:=(PATFISOM_sans_cc_I_1+PATFISOM_sans_cc_I_2+PATFISOM_sans_cc_I_3+PATFISOM_sans_cc_I_4+PATFISOM_sans_cc_I_5+PATFISOM_sans_cc_I_6+PATFISOM_sans_cc_I_7+PATFISOM_sans_cc_I_8+PATFISOM_sans_cc_I_9+PATFISOM_sans_cc_I_10)/10,
min_10_PATIMM_I:=pmin(PATIMM_I_1,PATIMM_I_2,PATIMM_I_3,PATIMM_I_4,PATIMM_I_5,PATIMM_I_6,PATIMM_I_7,PATIMM_I_8,PATIMM_I_9,PATIMM_I_10),
max_10_PATIMM_I:=pmax(PATIMM_I_1,PATIMM_I_2,PATIMM_I_3,PATIMM_I_4,PATIMM_I_5,PATIMM_I_6,PATIMM_I_7,PATIMM_I_8,PATIMM_I_9,PATIMM_I_10),
min_10_PATFISOM_sans_cc_I:=pmin(PATFISOM_sans_cc_I_1,PATFISOM_sans_cc_I_2,PATFISOM_sans_cc_I_3,PATFISOM_sans_cc_I_4,PATFISOM_sans_cc_I_5,PATFISOM_sans_cc_I_6,PATFISOM_sans_cc_I_7,PATFISOM_sans_cc_I_8,PATFISOM_sans_cc_I_9,PATFISOM_sans_cc_I_10),
max_10_PATFISOM_sans_cc_I:=pmax(PATFISOM_sans_cc_I_1,PATFISOM_sans_cc_I_2,PATFISOM_sans_cc_I_3,PATFISOM_sans_cc_I_4,PATFISOM_sans_cc_I_5,PATFISOM_sans_cc_I_6,PATFISOM_sans_cc_I_7,PATFISOM_sans_cc_I_8,PATFISOM_sans_cc_I_9,PATFISOM_sans_cc_I_10))
resultats_care_proprio_impute_dupliquee <- data.table(base_care_proprio_impute_dupliquee)[,
.("Montant moyen du patrimoine immo" = round(weighted.mean(moy10_PATIMM_I , w=POIDS_SENIOR)),
"Montant moyen du patrimoine fi"= round(weighted.mean(moy10_PATFISOM_sans_cc_I, w=POIDS_SENIOR)),
"Montant moyen du patrimoine immo_c" = round(weighted.mean(moy10_PATIMM_I , w=poids_cales)),
"Montant moyen du patrimoine fi_c"= round(weighted.mean(moy10_PATFISOM_sans_cc_I, w=poids_cales))),
by=BASECARE]
colnames(base_care_proprio_impute_dupliquee)
result_nonproprio_avec_patrimoine_1_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 130)
result_nonproprio_avec_patrimoine_2_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 140)
result_nonproprio_avec_patrimoine_3_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 150)
result_nonproprio_avec_patrimoine_4_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 160)
result_nonproprio_avec_patrimoine_5_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 170)
result_nonproprio_avec_patrimoine_6_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 180)
result_nonproprio_avec_patrimoine_7_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 190)
result_nonproprio_avec_patrimoine_8_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 200)
result_nonproprio_avec_patrimoine_9_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 210)
result_nonproprio_avec_patrimoine_10_dupliquee <- imput_patri(base_compile_nonproprio_entree_avec_patrimoine_dupliquee, 220)
# --------------------------------------------------------------------------------
#                      Point de sauvegarde 6
save(list=ls(),
file = paste0(dossier_sauvegarde_rdata,
"/06_data_part6.Rdata")
)
setnames(result_nonproprio_avec_patrimoine_1_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_1', 'PATFISOM_sans_cc_I_1'))
setnames(result_nonproprio_avec_patrimoine_2_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_2', 'PATFISOM_sans_cc_I_2'))
setnames(result_nonproprio_avec_patrimoine_3_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_3', 'PATFISOM_sans_cc_I_3'))
setnames(result_nonproprio_avec_patrimoine_4_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_4', 'PATFISOM_sans_cc_I_4'))
setnames(result_nonproprio_avec_patrimoine_5_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_5', 'PATFISOM_sans_cc_I_5'))
setnames(result_nonproprio_avec_patrimoine_6_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_6', 'PATFISOM_sans_cc_I_6'))
setnames(result_nonproprio_avec_patrimoine_7_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_7', 'PATFISOM_sans_cc_I_7'))
setnames(result_nonproprio_avec_patrimoine_8_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_8', 'PATFISOM_sans_cc_I_8'))
setnames(result_nonproprio_avec_patrimoine_9_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_9', 'PATFISOM_sans_cc_I_9'))
result_nonproprio_avec_patrimoine_1_dupliquee <- result_nonproprio_avec_patrimoine_1_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_2_dupliquee <- result_nonproprio_avec_patrimoine_2_dupliquee %>% select(-IDSENIOR)
setnames(result_nonproprio_avec_patrimoine_10_dupliquee, c('PATIMM_I', 'PATFISOM_sans_cc_I'), c('PATIMM_I_10', 'PATFISOM_sans_cc_I_10'))
result_nonproprio_avec_patrimoine_3_dupliquee <- result_nonproprio_avec_patrimoine_3_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_4_dupliquee <- result_nonproprio_avec_patrimoine_4_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_5_dupliquee <- result_nonproprio_avec_patrimoine_5_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_6_dupliquee <- result_nonproprio_avec_patrimoine_6_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_7_dupliquee <- result_nonproprio_avec_patrimoine_7_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_8_dupliquee <- result_nonproprio_avec_patrimoine_8_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_9_dupliquee <- result_nonproprio_avec_patrimoine_9_dupliquee %>% select(-IDSENIOR)
result_nonproprio_avec_patrimoine_10_dupliquee <- result_nonproprio_avec_patrimoine_10_dupliquee %>% select(-IDSENIOR)
base_care_nonproprio_avec_patrimoine_dupliquee <- base_care_dupliquee_apres_imputation_vax %>%
filter(proprio_entree=="non" & placement_entree=="oui")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_dupliquee, result_nonproprio_avec_patrimoine_1_dupliquee, all.x=TRUE, by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_2_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_3_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_4_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_5_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_6_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_7_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_8_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_9_dupliquee, all.x=TRUE,by="idsenior_dupliquee")
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- merge(base_care_nonproprio_avec_patrimoine_impute_dupliquee, result_nonproprio_avec_patrimoine_10_dupliquee,all.x=TRUE, by="idsenior_dupliquee")
# on ajoute des statistiques obtenues à partir des 10 imputations aléatoires
base_care_nonproprio_avec_patrimoine_impute_dupliquee <- base_care_nonproprio_avec_patrimoine_impute_dupliquee %>%
mutate(moy10_PATIMM_I:=(PATIMM_I_1+PATIMM_I_2+PATIMM_I_3+PATIMM_I_4+PATIMM_I_5+PATIMM_I_6+PATIMM_I_7+PATIMM_I_8+PATIMM_I_9+PATIMM_I_10)/10,
moy10_PATFISOM_sans_cc_I:=(PATFISOM_sans_cc_I_1+PATFISOM_sans_cc_I_2+PATFISOM_sans_cc_I_3+PATFISOM_sans_cc_I_4+PATFISOM_sans_cc_I_5+PATFISOM_sans_cc_I_6+PATFISOM_sans_cc_I_7+PATFISOM_sans_cc_I_8+PATFISOM_sans_cc_I_9+PATFISOM_sans_cc_I_10)/10,
min_10_PATIMM_I:=pmin(PATIMM_I_1,PATIMM_I_2,PATIMM_I_3,PATIMM_I_4,PATIMM_I_5,PATIMM_I_6,PATIMM_I_7,PATIMM_I_8,PATIMM_I_9,PATIMM_I_10),
max_10_PATIMM_I:=pmax(PATIMM_I_1,PATIMM_I_2,PATIMM_I_3,PATIMM_I_4,PATIMM_I_5,PATIMM_I_6,PATIMM_I_7,PATIMM_I_8,PATIMM_I_9,PATIMM_I_10),
min_10_PATFISOM_sans_cc_I:=pmin(PATFISOM_sans_cc_I_1,PATFISOM_sans_cc_I_2,PATFISOM_sans_cc_I_3,PATFISOM_sans_cc_I_4,PATFISOM_sans_cc_I_5,PATFISOM_sans_cc_I_6,PATFISOM_sans_cc_I_7,PATFISOM_sans_cc_I_8,PATFISOM_sans_cc_I_9,PATFISOM_sans_cc_I_10),
max_10_PATFISOM_sans_cc_I:=pmax(PATFISOM_sans_cc_I_1,PATFISOM_sans_cc_I_2,PATFISOM_sans_cc_I_3,PATFISOM_sans_cc_I_4,PATFISOM_sans_cc_I_5,PATFISOM_sans_cc_I_6,PATFISOM_sans_cc_I_7,PATFISOM_sans_cc_I_8,PATFISOM_sans_cc_I_9,PATFISOM_sans_cc_I_10))
resultats_care_nonproprio_avec_patrimoine_impute_dupliquee <- data.table(base_care_nonproprio_avec_patrimoine_impute_dupliquee)[,
.("Montant moyen du patrimoine immo" = round(weighted.mean(moy10_PATIMM_I , w=POIDS_SENIOR)),
"Montant moyen du patrimoine fi"= round(weighted.mean(moy10_PATFISOM_sans_cc_I, w=POIDS_SENIOR)),
"Montant moyen du patrimoine immo_c" = round(weighted.mean(moy10_PATIMM_I , w=poids_cales)),
"Montant moyen du patrimoine fi_c"= round(weighted.mean(moy10_PATFISOM_sans_cc_I, w=poids_cales))),
by=BASECARE]
# Les seniors de CARE-I qui ont du patrimoine :
# - immobilier (et éventuellement aussi financier) : ils ont proprio_enntree = "oui"
# - financier uniquement : ils ont proprio_entree = "non" et placement_financier = "oui"
base_care_avec_patrimoine_impute_dupliquee <- bind_rows(base_care_proprio_impute_dupliquee,
base_care_nonproprio_avec_patrimoine_impute_dupliquee)
# Les seniors de CARE-I qui n'ont ni patrimoine immobilier (proprio_entree = "non")
# ni patrimoine financier (placement_entree = "non")
base_care_sans_patrimoine_impute_dupliquee <- base_care_dupliquee_apres_imputation_vax %>%
filter(proprio_entree=="non" & placement_entree=="non")
# Pour eux, toutes les indicateurs sur le patrimoine sont nuls
base_care_sans_patrimoine_impute_dupliquee <- base_care_sans_patrimoine_impute_dupliquee %>%
mutate(PATIMM_I_1 = 0,
PATFISOM_sans_cc_I_1 = 0,
PATIMM_I_2 = 0,
PATFISOM_sans_cc_I_2 = 0,
PATIMM_I_3 = 0,
PATFISOM_sans_cc_I_3 = 0,
PATIMM_I_4 = 0,
PATFISOM_sans_cc_I_4 = 0,
PATIMM_I_5 = 0,
PATFISOM_sans_cc_I_5 = 0,
PATIMM_I_6 = 0,
PATFISOM_sans_cc_I_6 = 0,
PATIMM_I_7 = 0,
PATFISOM_sans_cc_I_7 = 0,
PATIMM_I_8 = 0,
PATFISOM_sans_cc_I_8 = 0,
PATIMM_I_9 = 0,
PATFISOM_sans_cc_I_9 = 0,
PATIMM_I_10 = 0,
PATFISOM_sans_cc_I_10 = 0,
moy10_PATIMM_I:=0,
moy10_PATFISOM_sans_cc_I:=0,
min_10_PATIMM_I:=0,
max_10_PATIMM_I:=0,
min_10_PATFISOM_sans_cc_I:=0,
max_10_PATFISOM_sans_cc_I:=0)
resultats_care_sans_patrimoine_impute_dupliquee <- data.table(base_care_sans_patrimoine_impute_dupliquee)[,
.("Montant moyen du patrimoine immo" = round(weighted.mean(moy10_PATIMM_I , w=POIDS_SENIOR)),
"Montant moyen du patrimoine fi"= round(weighted.mean(moy10_PATFISOM_sans_cc_I, w=POIDS_SENIOR)),
"Montant moyen du patrimoine immo_c" = round(weighted.mean(moy10_PATIMM_I , w=poids_cales)),
"Montant moyen du patrimoine fi_c"= round(weighted.mean(moy10_PATFISOM_sans_cc_I, w=poids_cales))),
by=BASECARE]
# tous les seniors de CARE-I, qu'ils aient ou non du patrimoine (immobilier ou financier)
base_care_impute_all_dupliquee <- bind_rows(data.table(base_care_avec_patrimoine_impute_dupliquee),
data.table(base_care_sans_patrimoine_impute_dupliquee))
base_care_impute_all_dupliquee <- base_care_impute_all_dupliquee %>%
mutate(PATIMM=moy10_PATIMM_I,
PATFISOM_sans_cc=moy10_PATFISOM_sans_cc_I) %>%
select(-c(PATIMM_I_1, PATFISOM_sans_cc_I_1,
PATIMM_I_2, PATFISOM_sans_cc_I_2,
PATIMM_I_3, PATFISOM_sans_cc_I_3,
PATIMM_I_4, PATFISOM_sans_cc_I_4,
PATIMM_I_5, PATFISOM_sans_cc_I_5,
PATIMM_I_6, PATFISOM_sans_cc_I_6,
PATIMM_I_7, PATFISOM_sans_cc_I_7,
PATIMM_I_8, PATFISOM_sans_cc_I_8,
PATIMM_I_9, PATFISOM_sans_cc_I_9,
PATIMM_I_10, PATFISOM_sans_cc_I_10,
moy10_PATIMM_I, moy10_PATFISOM_sans_cc_I,
min_10_PATIMM_I, max_10_PATIMM_I,
min_10_PATFISOM_sans_cc_I, max_10_PATFISOM_sans_cc_I))
base_care_impute_all_dupliquee <- base_care_impute_all_dupliquee %>%
select(-c(PATFISOM, PATRI_BRUT, PATRI_NET))
base_patri_impute_all_dupliquee <- base_patri_dupliquee_apres_imputation_vax
base_patri_impute_all_dupliquee <- base_patri_impute_all_dupliquee %>%
select(-c(PATFISOM, PATRI_BRUT, PATRI_NET))
base_care_patri_impute_all_dupliquee <- bind_rows(base_care_impute_all_dupliquee,
base_patri_impute_all_dupliquee)
base_care_patri_impute_all <- base_care_patri_impute_all_dupliquee %>%
group_by(IDSENIOR) %>%
summarise(POIDS_SENIOR = mean(POIDS_SENIOR),
poids_cales = mean(poids_cales),
PATFISOM_sans_cc = mean(PATFISOM_sans_cc),
PATIMM = mean(PATIMM),
BASECARE = determiner_modalite_majoritaire(BASECARE),
SEXE = determiner_modalite_majoritaire(SEXE),
STATUT_ETAB = determiner_modalite_majoritaire(STATUT_ETAB),
TCLNAIS_2 = determiner_modalite_majoritaire(TCLNAIS_2),
type_menage_entree = determiner_modalite_majoritaire(type_menage_entree),
AGEQ = determiner_modalite_majoritaire(AGEQ),
AGEQ_CJ_entree = determiner_modalite_majoritaire(AGEQ_CJ_entree),
CSP_8 = determiner_modalite_majoritaire(CSP_8),
CSP_CJ_8_entree = determiner_modalite_majoritaire(CSP_CJ_8_entree),
CSP_CJ_DCD_8_entree = determiner_modalite_majoritaire(CSP_CJ_DCD_8_entree),
RFONC = determiner_modalite_majoritaire(RFONC),
RTO_FOYER_I = determiner_modalite_majoritaire(RTO_FOYER_I),
VAL_FOYER_I = determiner_modalite_majoritaire(VAL_FOYER_I),
VAM_FOYER_I = determiner_modalite_majoritaire(VAM_FOYER_I),
revenu_nonind_modele = mean(revenu_nonind_modele),
revenu_ind_foyer_modele_c = mean(revenu_ind_foyer_modele_c),
proprio_entree = determiner_modalite_majoritaire(proprio_entree),
placement_entree = determiner_modalite_majoritaire(placement_entree),
pres_ash_senior_cor = determiner_modalite_majoritaire(pres_ash_senior_cor),
AIDELOG = determiner_modalite_majoritaire(AIDELOG),
region = determiner_modalite_majoritaire(region),
base = determiner_modalite_majoritaire(as.factor(base)),
imputation_vax = determiner_modalite_majoritaire(as.factor(imputation_vax))
)
base_care_patri_impute_all <- base_care_patri_impute_all %>%
mutate(base = ifelse(base=="CARE", "CARE-I", "Patrimoine"))
base_care_impute_all <- base_care_patri_impute_all %>%
filter(base=="CARE-I")
base_patri_impute_all <- base_care_patri_impute_all %>%
filter(base=="Patrimoine")
base_care <- base_care %>%
mutate(imputation_vax = "avant_imputation_vax",
base = "CARE-I")
base_patri <- base_patri %>%
mutate(imputation_vax = "avant_imputation_vax",
base = "Patrimoine")
base_care_patri <- bind_rows(base_care, base_patri)
base_care_noimpute <- base_care %>%
select(colnames(base_care_impute_all))
base_patri_noimpute <- base_patri %>%
select(colnames(base_patri_impute_all))
base_care_patri_noimpute <- bind_rows(base_care_noimpute,
base_patri_noimpute)
# --------------------------------------------------------------------------------
#                      Point de sauvegarde 7
save(list=ls(),
file = paste0(dossier_sauvegarde_rdata,
"/06_data_part7.Rdata")
)
id_test <- setdiff(base_patri$IDSENIOR, base_patri_impute_all$IDSENIOR)
test <- base_patri %>%
filter(is.element(IDSENIOR, id_test))
save(base_care_patri_impute_all,
base_care_impute_all,
base_patri_impute_all,
base_care_patri,
base_care,
base_patri,
base_care_patri_noimpute,
base_care_noimpute,
base_patri_noimpute,
file = paste0(dossier_sauvegarde_rdata,
"/06_data.Rdata"))
########################################################################
#                                                                      #
# Résultats de l'imputation de patrimoine dans CARE-I                  #
#                                                                      #
#  BHD - Olivier Guin                                                  #
#                                                                      #
# Dernière MAJ : 15/03/2024                                            #
########################################################################
# NOTE 11/03 : TODO : il manque des données moyennes de patrimoine immobilier et financier
# dans la plupart des graphiques --> pourquoi ? essayer de les récupérer ?
rm(list=ls())
library(ggplot2)
library(mice)
library(dplyr)
library(data.table)
library(survey)
library(descr)
library(openxlsx)
library(reldist)
library(stringr)
dossier_load0 <- "C:/Users/olivier.guin/Travail/Autonomix/Travaux/Sujet_grignotage_patrimoine/Code/rdata/rdata_production"
load(paste0(dossier_load0, "/00_data.Rdata"))
load(paste0(dossier_sauvegarde_rdata, "/06_data.RData"))
View(base_patri_impute_all)
View(base_care_noimpute)
View(base_care_impute_all)
